{
    "config": {
        "abort": {
            "invalid_dongle_path": "Invalid dongle path",
            "single_instance_allowed": "Already configured. Only a single configuration possible."
        },
        "error": {
            "invalid_dongle_path": "No valid dongle found for this path"
        },
        "step": {
            "detect": {
                "data": {
                    "path": "USB dongle path"
                },
                "title": "Select the path to you ENOcean dongle"
            },
            "manual": {
                "data": {
                    "path": "USB dongle path"
                },
                "title": "Enter the path to you ENOcean dongle"
            }
        }
    },
    "options": {
        "title": "Programmable thermostat",
        "step": {
            "init": {
                "title": "Programmable thermostat - entities definition",
                "description": "Define entities connected to the thermostat. Documentation at https://github.com/custom-components/climate.programmable_thermostat",
                "data": {
                    "name": "Name",
                    "heater": "Heaters (comma separated name of entities) - null to keep it empty",
                    "cooler": "Coolers (comma separated name of entities) - null to keep it empty",
                    "actual_temp_sensor": "Room temperature sensor (entity name)",
                    "target_temp_sensor": "Planned temperature sensor (entity name)"
                }
            },
            "second": {
                "title": "Programmable thermostat - temperature definition",
                "description": "Define min and max temperature and the delta activation. Documentation at https://github.com/custom-components/climate.programmable_thermostat",
                "data": {
                    "min_temp": "Min temperature allowed",
                    "max_temp": "Max temperature allowed",
                    "tolerance": "Activation temperature delta (tenth has to different from 0)"
                }
            },
            "final": {
                "title": "Programmable thermostat - options definition",
                "description": "Define additional options. Documentation at https://github.com/custom-components/climate.programmable_thermostat",
                "data": {
                    "initial_hvac_mode": "Startup mode - null to keep it empty",
                    "related_climate": "Climate entity connect to this one (comma separated name of entities) - null to keep it empty",
                    "hvac_options": "Allowed modes",
                    "auto_mode": "Automatic mode type",
                    "min_cycle_duration": "Minimum cycle duration (hh:mm:ss or mm:ss) - null to keep it empty"
                }
            }
        },
        "error": {
          "name": "Choose a name",
          "heater and cooler": "Valorize at least one between heaters and coolers",
          "heater wrong": "One or more heaters are not existing into Home Assistant",
          "cooler wrong": "One or more coolers are not existing into Home Assistant",
          "sensor wrong": "Room temperature sensor is not existing into Home Assistant",
          "target wrong": "Plannned temperature sensor is not existing into Home Assistant",
          "min_temp": "Min temperature has to be lower then max one",
          "tolerance": "Activation delta has to be positive, lower then min temperature and with tenth different from 0",
          "related climate": "Climate entity that you want to connect is not valid or not existing",
          "duration error": "Time delta format is wrong. accepted format are hh:mm:ss or mm:ss",
          "missing_data": "Missing data. All data of this form are mandatry"
        }
    }
}